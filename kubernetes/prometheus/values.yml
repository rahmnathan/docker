# helm install -n monitoring kube-prometheus-stack prometheus-community/kube-prometheus-stack --values prometheus/values.yml

grafana:
  assertNoLeakedSecrets: false
  grafana.ini:
    users:
      viewers_can_edit: false
    auth:
      disable_login_form: false
      disable_signout_menu: false
    auth.anonymous:
      enabled: true
      org_role: Viewer
    database:
      type: postgres
      host: postgresql.postgres:5432
      name: grafana
      user: grafana
      password: pw123
  ingress:
      enabled: true
      hosts:
      - grafana.nathanrahm.com
      path: /
      annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          ingress.kubernetes.io/ssl-redirect: "true"
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
#          nginx.ingress.kubernetes.io/enable-modsecurity: "true"
#          nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
#          nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
      tls:
        - hosts:
            - grafana.nathanrahm.com
          secretName: grafana-ingress-tls
prometheus:
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    retention: 60d
    additionalScrapeConfigs:
    - job_name: 'localmovies'
      scheme: http
      metrics_path: '/actuator/prometheus'
      static_configs:
        - targets: ['localmovies.localmovies:8080']
    - job_name: 'postgres'
      scheme: http
      metrics_path: '/metrics'
      static_configs:
        - targets: ['postgresql-metrics.postgres:9187']
    - job_name: 'nextcloud'
      scheme: http
      metrics_path: '/metrics'
      scrape_timeout: 30s
      static_configs:
        - targets: ['nextcloud-metrics.nextcloud:9205']
alertmanager:
  alertmanagerSpec:
    alertmanagerConfigNamespaceSelector: {}
    alertmanagerConfigSelector: {}